// Background color

@mixin bg-colors($map) {
	@each $theme, $color in $map {
		&--#{$theme} {
			background-color: $color;
		}
	}
}

// Roundy 

@mixin roundy($width, $height, $border: $br-round) {
	width: $width;
	height: $height;
	border-radius: $border
}

// ===============================================================
//                PSEUDO ELEMENT MIXINS
// ===============================================================

@mixin p-el($el, $el-width, $el-height) {
    @if $el=="before"or $el=="after" {
        &:#{$el} {
            @extend %pseudos;
            width: $el-width;
            height: $el-height;
            @content;
        }
    }
    @else {
        @warn "`#{$el}` is not a valid pseudo-element.";
    }
}

// Flexy 

@mixin flexy($disp: flex, $just: null, $wrap: null, $align: null) {
	display: $disp;
	flex-wrap: $wrap;
	justify-content: $just;
	align-item: $align;
}

// Media Query

@mixin mq($break) {
	$value: map-get($breakpoints, $break);
	$sm: map-get($breakpoints, 'sm');

	@if $value == null {
		@error "`#{$break}` is not a valid break point";
	}
	@else if $value < $sm {
		@media(max-width: $value) {
			@content;
		}
	}
	@else {
		@media(min-width: $value) {
			@content;
		}
	}
}